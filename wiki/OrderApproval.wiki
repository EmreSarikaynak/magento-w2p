#summary Order Approval extension description

Order Approval extension allows organizing a approval process in Magento shop. Approval process is managed by approvers (a customer with enabled approver role) who are set by the administrator. Also, administrator should set approvers for each customer whose orders need approval.

Approval process sits between customer's shopping cart and the checkout process. It means that customers are able to add any number of products into their shopping cart, delete and modify them at any time without any restrictions, but they can not checkout products from the cart before they are approved.

When customers try to checkout their shopping cart, the customer's approver receives a notification about unapproved products in the customer's shopping cart. Approver can use the link from the e-mail to reach order approval UI and approve customer's products. Customers can check approval status for every product in their shopping cart and are allowed to checkout items that have already been approved.

== Approval process workflow ==
http://create.ly/gbvkju1s1?a=b.png

= Approval status for cart item =
Item's option 'additional_options' was used to save and show approval status for an item.
These options are displayed in Product name column on shopping cart page.

See '_add_notice_to_approved_item' method code in [http://code.google.com/p/magento-w2p/source/browse/branches/ZetaPrints_OrderApproval/app/code/community/ZetaPrints/OrderApproval/controllers/CartController.php app/code/community/ZetaPrints/OrderApproval/controllers/CartController.php] file and code in [https://code.google.com/p/magento-w2p/source/browse/branches/ZetaPrints_OrderApproval/app/code/community/ZetaPrints/OrderApproval/controllers/OnepageController.php app/code/community/ZetaPrints/OrderApproval/controllers/OnepageController.php] file.

= How to create a custom notification email =
There's an e-mail template editor in M. admin interface (System -> Transactional Emails). Administrators can create new e-mail templates based on original M. templates.

Step 1: Press Add New Template button. Select 'New items to approve' template from list. Select a locale you want to use the new template in. Press Load Template button to load content of the template for further editing.

Step 2: Input a name for the new template. Edit its subject and content. When done, press Save Template button.

Step 3: Select your newly created template in System -> Configuration -> Sales Emails -> Order Approval Tab from a list.

= How to make it work with M. web-to-print extension =
Both Order Approval and web-to-print extensions support each other out of the box.

Support code is split into two parts.

One part from OrderApproval extension checks an existence of a web-to-print helper class. The helper class exists then web-to-print extension has been installed already. OrderApproval extension uses the helper class to display previews from web-to-print order on approval UI pages if the check was successful.

Another part of support code from web-to-print extension adds resource files (JS and CSS) to approval UI pages in zptheme layout file.

=  Total removal of extension =
  * Remove extension via Magento's ConnectManager
  * Copy [http://magento-w2p.googlecode.com/svn/branches/ZetaPrints_OrderApproval/uninstall/uninstall.php uninstall.php] file to a root of your M. installation.
  Note: change including path at the beginning of the script if you copied it into another directory or a subdirectory of M. installation.
  * Point browser to uninstall.php file from your M. installation

= Added or changed M. files =
The extension adds several files (none are changed) to base theme, such as additional layout and template files to checkout module, some widget templates from admin theme and adds e-mail templates.

List of added files:
  * Files from [http://code.google.com/p/magento-w2p/source/browse/#svn/branches/ZetaPrints_OrderApproval/app/design/frontend/base/default/layout/checkout app/design/frontend/base/default/layout/checkout/] directory
  * [http://code.google.com/p/magento-w2p/source/browse/branches/ZetaPrints_OrderApproval/app/design/frontend/base/default/template/checkout/cart/edit.phtml app/design/frontend/base/default/template/checkout/cart/edit.ptml] file
  * Files from [http://code.google.com/p/magento-w2p/source/browse/#svn/branches/ZetaPrints_OrderApproval/app/design/frontend/base/default/template/checkout/cart/edit app/design/frontend/base/default/template/checkout/cart/edit/] directory
  * Files from [http://code.google.com/p/magento-w2p/source/browse/#svn/branches/ZetaPrints_OrderApproval/app/design/frontend/base/default/template/widget app/design/frontend/base/default/template/widget] directory
  * [http://code.google.com/p/magento-w2p/source/browse/branches/ZetaPrints_OrderApproval/skin/frontend/base/default/css/order-approval/styles.css skin/frontend/base/default/css/order-approval/styles.css] file
  * [http://code.google.com/p/magento-w2p/source/browse/branches/ZetaPrints_OrderApproval/app/locale/en_US/template/email/sales/new-items-to-approve.txt app/locale/en_US/template/email/sales/new-items-to-approve.txt] file

= Re-defined M. classes =
  * Class Mage_Checkout_CartController is re-defined by ZetaPrints_OrderApproval_CartController class.
  Re-defined functions:
    * indexAction ()
  * Class Mage_Checkout_OnepageController is re-defined by ZetaPrints_OrderApproval_OnepageController class
  Re-defined functions:
    * indexAction ()
  * Class Mage_Checkout_Block_Cart is re-defined by ZetaPrints_OrderApproval_Block_Cart class
  Re-defined functions:
    * getItems ()
    * chooseTemplate ()
  * Class Mage_Checkout_Model_Cart is re-defined by ZetaPrints_OrderApproval_Model_Cart
  Re-defined functions:
    * getItems ()
    * getQuoteProductIds ()
    * init ()
    * addProduct ()
    * updateItems ()
    * removeItem ()
    * truncate ()
    * getProductIds ()
  * Class Mage_Sales_Model_Quote is re-defined by ZetaPrints_OrderApproval_Model_Quote
  Re-defined functions:
    * _afterSave ()
    * getItemsCollection()
    * getAllItems ()
    * hasItems ()
    * getItemById ()
    * removeItem ()
    * getAllVisibleItems ()
    * addItem ()
    * getItemByProduct ()
    * collectTotals ()
    * setIsActive ()
  * Class Mage_Sales_Model_Quote_Address is re-defined by Mage_Sales_Model_Quote_Address
  Re-defined functions:
    * getAllItems()