#summary User guide of ZetaPrint API functions.
#labels Phase-Implementation

ZetaPrints [http://www.zetaprints.com web-to-print and image generation system] provides a [http://www.zetaprints.com/help/category/api/ simple web-to-print API] with various functions to create users, control access, generate previews and place orders. 
All the functions are called via HTTP GET/POST. We created a set of PHP wrappers to simplify the programming task.

The source code for PHP wrappers is located under [http://code.google.com/p/magento-w2p/source/browse/#svn/trunk/zp_api_lib svn/trunk/zp_api_lib].

==ZP API Functions Overview ==
	# Set api key and api url 
	# Catalogs API
		# Get list of catalogs for the domain from ZP ([http://www.zetaprints.com/help/catalogs-api/ Catalogs API])
		# Get list of templates of catalog ([http://www.zetaprints.com/help/template-details-api/ Templates API])
	# Template API
		# Get details of template ([http://www.zetaprints.com/help/template-details-api/ Templates API])
		# Show previews of template in IFRAME ([http://www.zetaprints.com/help/user-pass-through-api/ User pass-through API])
	# User API
		# Regiser new User ([http://www.zetaprints.com/help/user-registration-api/ User rego API])
	# Order API
		# Get Order details ([http://www.zetaprints.com/help/orders-api-order-details/ Order Details API])
		# Saved order completion ([http://www.zetaprints.com/help/orders-api-generate-output-files/ Order files generation API])
		# Change Order status ([http://www.zetaprints.com/help/orders-api-status-change/ Order status API])

== Include API And Set api key and api url ==
==== Include file ====
The only file needed to utilize the wrappers is api/zp_api.php
{{{
include ("api/zp_api.php");
}}}
==== Set api key and api url ====
There are 2 main parameters needed for the wrappers to function: [http://www.zetaprints.com/help/about-web-to-print-api/ ZetaPrints API Key] and the [http://www.zetaprints.com/help/category/access-url/ domain name] of your ZetaPrints portal.
{{{
/* api key and url */
/* to use api function, we have init api key and api url by call zp_api_init as below */
zp_api_init("_key_" , "_url_");
}}}
  * "key" comes in form of a GUID, e.g. "1CFFC003-C369-43A2-AFC4-E0AA292F4436",
  * "url" is a fully qualified domain name including http:// prefix

== Catalogs API ==
ZetaPrints has a 3-level structure: *portal* ^1^-->^*^ *catalog* ^1^-->^*^ *template*. You need to obtain the list of catalogs and then request a list of templates for each of the catalogs. You may want to check access control attribute before requesting a list of template if your site should only show public templates.


==== Get list of catalogs for the domain from ZP ====
{{{
//1.1. Get list of catalogs for the domain
$list = zp_api_catalog_list();
print_r($list);//process result here
/*
foreach ($list as $cdata){
//process here
}
*/
}}}
==== Get list of templates of catalog ====
You need a Catalog ID as a parameter to call this function. The parameter is a GUID, e.g. "0187C932-6EB2-4DFF-B90E-3B3BB33E9279".
{{{
//1.2. Get list of templates of catalog
$list_template = zp_api_catalog_detail("_CatalogID_");
print_r($list_template);
/*
foreach ($list_template as $template){
//process here
}
*/
}}}


== Get template details ==
Once you have a list of templates from the previous calls you can request template details, one by one. You need a template ID as a parameter. It comes in a form of GUID, e.g. "7AFB079C-BB16-4856-89FF-2E69B5BE303E".

{{{
//2.1. Get template details
$template = zp_api_template_detail("_TemplateID_");
print_r($template);
/*
//process here
*/
}}}

== Register new user ==
One of the requirements to use the preview and order generation functions is having a valid user ID registered in ZetaPrints with access rights to the template. This set of functions works only with public templates.

You must implement user management where a user is identified even before registering, this identification persists between visits, where possible and is synchronized with ZetaPrints User ID at all times.

ZetaPrints caches all user input, including text and uploaded images. If ZetaPrints user id changes then anything the user entered or uploaded before becomes unavailable. Read more in [http://www.zetaprints.com/help/user-registration-api/ User registration API]

{{{
// Prepare new user id and password
$user = zp_api_common_uuid(); // generate new user ID in ZP format (GUID)
$pass = zp_api_common_pass(); // generate an obscure password
$ret = zp_api_user_register($user, $pass); // Register a new user with ZetaPrints 
echo "regiter=[$ret]";;
}}}

_zp_api_user_register($user, $pass)_ function returns 
  * 0 - existing user, OK
  * 1 - new user registered, OK
  * -1 - failure, try again with different parameters

Registering a new user with _UserID_ and _Password_ matching an existing user is the same as verifying the user exists.

==== Show template previews in an IFRAME ====
There is number of options how your website may present templates:
  * Build your own GUI
  * Show ZetaPrints in a FRAME
  * Use ZetaPrints [http://code.google.com/p/e-cards-plugin/ e-cards widget]

One of the options is to show ZetaPrints interface in an IFRAME. Note, that you have to have a registered user ID to use this function. 

The function crafts a special URL for the FRAME SRC attribute that includes the following parameters: 

  * RetT=???

{{{
//Show previews of template in IFRAME
$iframe = zp_api_template_iframe_url ("_Template ID_",$user,$pass);
echo "iframe=[$iframe]";
}}}
where _Template ID_ is a GUID of a template in question.
The function returns ???

== Order API ==
==== Get Order details ====
{{{
//4.1. Get Order details
$id = "FB70B451-A132-461A-A859-C936A3846724";
$order = zp_api_order_detail($id);
print_r($order);
/*
//process here
*/
}}}
==== Saved order completion ====
{{{
//4.2. Saved order completion
$id = "FB70B451-A132-461A-A859-C936A3846724";
$order = zp_api_order_save($id);
print_r($order);
/*
//process here
*/
}}}
==== Change Order status ====
{{{
//4.3. Change Order status
$id = "FB70B451-A132-461A-A859-C936A3846724";
$order = zp_api_order_change($id, "deleted", "saved");
print_r($order);
/*
//process here
*/
}}}